@mixin col () {
    display: block;
    padding: $spacing / 2;
  }
  
  .container {
    margin: 0 auto;
    max-width: $container-width;
    padding: $spacing;
    &.full {
      max-width: inherit;
    }
    &.paddingless {
      padding: 0;
    }
  }
  
  // Normal
  .row {
    display: flex;
    flex-wrap: wrap;
    &.center {
      justify-content: center;
    }
    .col {
      @include col();
      flex-basis: 0;
      flex-grow: 1;
      flex-shrink: 1;
      img {
        max-width: 100%;
      }
      @for $i from 1 to $grid-cols + 1 {
        &-#{ $i } {
          @include col();
          width: 100% / $grid-cols * $i;
        }
      }
    }
  }
  
  @media (min-width: $mobile) and (max-width: $tablet) {
    .row:not(.t) {
      display: block;
      .col {
        @for $i from 1 to $grid-cols + 1 {
          &-#{ $i } {
            width: inherit;
          }
        }
      }
    }
    .row {
      .t {
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        @for $i from 1 to $grid-cols {
          &-#{ $i } {
            @include col();
            width: 100% / $grid-cols * $i !important;
          }
        }
      }
    }
  }
  
  @media (max-width: $mobile) {
    .row:not(.m) {
      display: block;
      .col {
        @for $i from 1 to $grid-cols + 1 {
          &-#{ $i } {
            width: inherit;
          }
        }
      }
    }
    .row {
      .m {
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 1;
        @for $i from 1 to $grid-cols {
          &-#{ $i } {
            @include col();
            width: 100% / $grid-cols * $i !important;
          }
        }
      }
    }
  }
  